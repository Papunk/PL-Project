<comment> := // <string> <newline>
           | /* <string> */

<string> := <quote> (all unicode characters)* <quote>

<number> := (0-9)+[.](0-9)*

<boolean> := true
           | false

<if_statement> := if <condition> then <statements>
                | if <condition> \n {<statements>}
                
<condition> := <> <contidional_operator> <>

<contidional_operator> := and
                        | or 
                        | not

<statements> := <statement> <statements>
              | <empty>

<statement> := <if_statement> <newline>
             | <for_statement> <newline>
             | <while_statement> <newline>

<quote> := "

<newline> := \n

<empty> := Îµ




var variableName value // variable declaration (type is inferred upon first assignment)
variableName = value // variable assignment

struct structName () // struct declaration (similar to a dictionary or class)
structName.propertyName // access stored properties for structs

array arrayName [] // array declaration
arrayName at Int // access array indices

function functionName(arg: Type) -> Type {} // function declaration

while Bool {} // while loop

for variable in Collection {} // for each loop
for variable from Int to Int {} // indexed for loop
for variable from Int to Int do Statement // single line for loop

is // comparison operator